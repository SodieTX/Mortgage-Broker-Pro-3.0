# Production Environment Configuration
# EMC² Core Service - Production Settings

# Environment
NODE_ENV=production

# Server Configuration
PORT=3001
HOST=0.0.0.0
LOG_LEVEL=info

# Database Configuration (REQUIRED)
# Use a strong password and dedicated production database
DATABASE_URL=postgresql://mortgage_user:CHANGEME_STRONG_PASSWORD@db-host:5432/mortgage_broker_pro

# Security Configuration (REQUIRED)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=CHANGEME_GENERATE_32_CHAR_SECRET_KEY_FOR_PRODUCTION_USE_ONLY

# CORS Configuration
CORS_ORIGIN=https://yourdomain.com,https://app.yourdomain.com
FRONTEND_URL=https://app.yourdomain.com

# Redis Configuration (REQUIRED for production)
REDIS_HOST=redis-host
REDIS_PORT=6379
REDIS_PASSWORD=CHANGEME_REDIS_PASSWORD

# Session Configuration
SESSION_EXPIRY_DAYS=7
ACCESS_TOKEN_EXPIRY=15m
REFRESH_TOKEN_EXPIRY_DAYS=7

# Auth Configuration - Production Security
MAX_LOGIN_ATTEMPTS=3
LOCKOUT_DURATION_MINUTES=60
PASSWORD_RESET_EXPIRY_HOURS=1

# 2FA Configuration
TWO_FACTOR_APP_NAME="Mortgage Broker Pro"

# Application URLs
APP_URL=https://app.yourdomain.com

# Email Configuration - Production SMTP
# Use a dedicated email service for production
SMTP_HOST=smtp.yourmailprovider.com
SMTP_PORT=587
SMTP_SECURE=true
SMTP_USER=noreply@yourdomain.com
SMTP_PASS=CHANGEME_EMAIL_PASSWORD
EMAIL_FROM="Mortgage Broker Pro" <noreply@yourdomain.com>
EMAIL_REPLY_TO=support@yourdomain.com

# Production Email Providers (Choose one or more)

# SendGrid (Recommended for production)
SENDGRID_API_KEY=CHANGEME_SENDGRID_API_KEY

# Mailgun (Alternative)
MAILGUN_API_KEY=CHANGEME_MAILGUN_API_KEY
MAILGUN_DOMAIN=yourdomain.com
MAILGUN_EU=false

# AWS SES (Enterprise option)
AWS_ACCESS_KEY_ID=CHANGEME_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=CHANGEME_AWS_SECRET_KEY
AWS_REGION=us-east-1

# Azure Key Vault (Enterprise secret management)
AZURE_CLIENT_ID=CHANGEME_AZURE_CLIENT_ID
AZURE_CLIENT_SECRET=CHANGEME_AZURE_CLIENT_SECRET
AZURE_TENANT_ID=CHANGEME_AZURE_TENANT_ID
AZURE_KEYVAULT_URL=https://your-keyvault.vault.azure.net/

# Monitoring & Observability (Optional)
PROMETHEUS_ENABLED=true
METRICS_PORT=9090

# File Storage (Production)
STORAGE_TYPE=azure_blob  # or 'local' or 's3'
AZURE_STORAGE_ACCOUNT=yourstorageaccount
AZURE_STORAGE_KEY=CHANGEME_STORAGE_KEY
AZURE_STORAGE_CONTAINER=mortgage-documents

# Rate Limiting (Production tuned)
RATE_LIMIT_MAX=100
RATE_LIMIT_WINDOW_MS=900000  # 15 minutes

# SSL/TLS Configuration (if terminating SSL at app level)
SSL_CERT_PATH=/etc/ssl/certs/yourdomain.crt
SSL_KEY_PATH=/etc/ssl/private/yourdomain.key

# Production Security Headers
HELMET_CSP_ENABLED=true
HELMET_HSTS_ENABLED=true

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30

# Error Reporting (Optional)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
ERROR_REPORTING_ENABLED=true

# Performance Monitoring
APM_ENABLED=false
NEW_RELIC_LICENSE_KEY=CHANGEME_NEW_RELIC_KEY

# Production Deployment Metadata
DEPLOYMENT_ENV=production
DEPLOYMENT_VERSION=1.0.0
DEPLOYMENT_TIMESTAMP=2025-01-06T10:00:00Z

# ================================
# SECURITY CHECKLIST FOR PRODUCTION
# ================================

# □ Change ALL default passwords and secrets
# □ Use strong, randomly generated passwords (min 32 chars)
# □ Enable Redis authentication
# □ Configure database SSL/TLS
# □ Set restrictive CORS origins
# □ Use dedicated email service with API keys
# □ Enable backup and monitoring
# □ Set up SSL certificates
# □ Configure firewall rules
# □ Set up log aggregation
# □ Configure alerting for critical errors
# □ Test disaster recovery procedures
# □ Schedule security updates

# ================================
# REQUIRED CHANGES BEFORE PRODUCTION
# ================================

# 1. JWT_SECRET - Generate new secret
# 2. DATABASE_URL - Use production database
# 3. REDIS_PASSWORD - Set Redis password
# 4. SMTP credentials - Configure production email
# 5. CORS_ORIGIN - Set to production domains
# 6. All CHANGEME_ values must be replaced

# ================================
# SECURITY COMMANDS
# ================================

# Generate JWT Secret:
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

# Generate Redis Password:
# node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"

# Generate random password:
# node -e "console.log(require('crypto').randomBytes(24).toString('base64'))"
